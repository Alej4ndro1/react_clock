{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","setState","prevClockName","clockName","prevDate","props","console","debug","info","toLocaleTimeString","clearInterval","timeString","className","Component","getRandomName","value","now","toString","slice","App","hasClock","document","addEventListener","event","preventDefault","removeEventListener","ReactDOM","render","getElementById"],"mappings":"qMAUaA,EAAb,4MACEC,MAAyB,CACvBC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,SACzB,OAVP,gCAaE,cAGG,IAFYM,EAEb,EAFEC,UACMC,EACR,EADET,KAEMQ,EAAcL,KAAKO,MAAnBF,UACAR,EAASG,KAAKJ,MAAdC,KAEJO,IAAkBC,GAEpBG,QAAQC,MAAR,uBAA8BL,EAA9B,eAAkDC,IAGhDC,IAAaT,GAEfW,QAAQE,KAAKV,KAAKJ,MAAMC,KAAKc,wBA3BnC,kCA+BE,WACEC,cAAcZ,KAAKD,WAhCvB,oBAmCE,WACE,IACMc,EADWb,KAAKJ,MAAdC,KACgBc,qBAChBN,EAAcL,KAAKO,MAAnBF,UAER,OACE,sBAAKS,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGT,IAGF,YAED,sBAAMS,UAAU,cAAhB,SACGD,WAjDX,GAA2BE,a,MCN3B,SAASC,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBH,GAQX,IAAMI,EAAb,4MACEzB,MAAyB,CACvB0B,UAAU,EACVjB,UAAW,WAHf,EAMEN,QAAU,EANZ,uDAQE,WAAqB,IAAD,OAClBwB,SAASC,iBAAiB,SAAS,WACjC,EAAKrB,SAAS,CAAEmB,UAAU,OAG5BC,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKvB,SAAS,CAAEmB,UAAU,OAG5BtB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEE,UAAWW,QAC1B,QApBP,kCAuBE,WAAwB,IAAD,OACrBJ,cAAcZ,KAAKD,SAEnBwB,SAASI,oBAAoB,SAAS,WACpC,EAAKxB,SAAS,CAAEmB,UAAU,OAG5BC,SAASI,oBAAoB,eAAe,SAACF,GAC3CA,EAAMC,iBACN,EAAKvB,SAAS,CAAEmB,UAAU,SAhChC,oBAoCE,WACE,MAAgCtB,KAAKJ,MAA7B0B,EAAR,EAAQA,SAAUjB,EAAlB,EAAkBA,UAElB,OACE,sBAAKS,UAAU,MAAf,UACE,6CAECQ,GAAY,cAAC,EAAD,CAAOjB,UAAWA,WA3CvC,GAAyBU,aCZzBa,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.9d1fc27a.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  clockName: string;\n};\n\ntype State = {\n  date: Date;\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ date: new Date() });\n    }, 1000);\n  }\n\n  componentDidUpdate(\n    { clockName: prevClockName }: Readonly<Props>,\n    { date: prevDate }: Readonly<State>,\n  ) {\n    const { clockName } = this.props;\n    const { date } = this.state;\n\n    if (prevClockName !== clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevClockName} to ${clockName}`);\n    }\n\n    if (prevDate !== date) {\n      // eslint-disable-next-line no-console\n      console.info(this.state.date.toLocaleTimeString());\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n    const timeString = date.toLocaleTimeString();\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {timeString}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n\n    document.removeEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    document.removeEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n  }\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}